{
  /* ---------------------------------------------------------------------------
    Settings general
  --------------------------------------------------------------------------- */
  /**
   * editor
   */
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontSize": 13,
  "editor.letterSpacing": -0.4,
  "editor.lineHeight": 18,
  "editor.cursorStyle": "block",
  "editor.cursorBlinking": "smooth",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.renderWhitespace": "trailing",
  "editor.detectIndentation": false,
  "editor.comments.insertSpace": true,
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  "editor.rulers": [
    80
  ],
  "editor.folding": true,
  "editor.suggest.showKeywords": false,
  "editor.suggest.showWords": false,
  "editor.snippetSuggestions": "top",
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.minimap.enabled": false,
  "editor.tabCompletion": "on",
  // Setting word wrap with option ( toggle: control + z )
  "editor.wordWrap": "off",
  "editor.wordWrapColumn": 80,
  "editor.wrappingIndent": "indent",
  // Zoom in/out on the editor using Command key + mouse wheel
  "editor.mouseWheelZoom": true,
  // Don't include formatting when copying text
  "editor.copyWithSyntaxHighlighting": false,
  // Don't auto compltion when press specific key
  "editor.acceptSuggestionOnEnter": "off",
  "editor.acceptSuggestionOnCommitCharacter": false,
  // enable Bracket Pair Colorizer
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  // Disable copying empty lines
  "editor.emptySelectionClipboard": false,
  // Difference editor ignores whitespace
  "diffEditor.ignoreTrimWhitespace": true,
  /**
   * workbench
   */
  // display in preview mode if there is a readme
  "workbench.startupEditor": "readme",
  "workbench.colorCustomizations": {
    "editor.lineHighlightBackground": "#222222",
    // "editorLineNumber.foreground": "#3f3f3f",
    "editorLineNumber.activeForeground": "#51ff00",
    "terminalCursor.foreground": "#ffffff7f"
  },
  // show indent guide lines in the file tree and change indent size
  "workbench.tree.renderIndentGuides": "always",
  "workbench.tree.indent": 10,
  // Don't close open files when opening other files
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editor.untitled.hint": "hidden",
  "workbench.colorTheme": "Ayu Mirage Bordered",
  /**
   * breadcrumbs
   */
  "breadcrumbs.enabled": true,
  "breadcrumbs.filePath": "on",
  "breadcrumbs.symbolPath": "last",
  "breadcrumbs.symbolSortOrder": "position",
  /**
   * window
   */
  // move to window, if there is already it open.
  "window.openFilesInNewWindow": "off",
  "window.title": "${dirty}${activeEditorShort}${separator}${appName}",
  /**
   * search
   */
  "search.exclude": {},
  // Search results in the search view with the number of rows
  "search.showLineNumbers": true,
  /**
   * files
   */
  // remove wasted white space.
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "**/.fvm": true
    // "**/node_modules": true
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/.rvm/**": true,
    "**/node_modules/**": true,
    "**/GoogleDrive/**": true,
    "**/Dropbox/**": true,
    "**/Pictures/**": true,
    "**/.fvm": true
  },
  /**
   * confirm explorer
   */
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": true,
  // Open the directory where the file is when the file is opened in a tab
  "explorer.autoReveal": false,
  /**
   * debug
   */
  "debug.console.fontSize": 12,
  "debug.inlineValues": "on",
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.openDebug": "openOnSessionStart",
  /**
   * terminal
   */
  "terminal.integrated.fontSize": 12,
  // configure shell integration
  "terminal.integrated.shellIntegration.enabled": true,
  // copy when selected in terminal
  "terminal.integrated.copyOnSelection": true,
  // right-click to paste
  "terminal.integrated.rightClickBehavior": "paste",
  "terminal.integrated.smoothScrolling": true,
  /* ---------------------------------------------------------------------------
    Settings extensions
  --------------------------------------------------------------------------- */
  /**
   * Live Share
   */
  "liveshare.allowGuestDebugControl": true,
  "liveshare.allowGuestTaskControl": true,
  "liveshare.diagnosticLogging": true,
  "liveshare.languages.allowGuestCommandControl": true,
  /**
   * vscode.html-language-features
   */
  "html.format.enable": true,
  "html.format.wrapLineLength": 80,
  "html.format.indentInnerHtml": true,
  "html.format.endWithNewline": true,
  "html.format.indentHandlebars": true,
  "html.format.extraLiners": "head, body, /html",
  "html.format.wrapAttributes": "auto",
  "html.format.preserveNewLines": true,
  "html.format.maxPreserveNewLines": 1,
  "html.format.unformatted": null,
  "html.format.contentUnformatted": "pre,code,textarea",
  /**
   * emmet
   */
  // Make HTML tags as a building block structure
  "emmet.syntaxProfiles": {
    "html": {
      "inline_break": 1
    }
  },
  // Use emmet's completion function in js to complete html tags
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "erb": "html",
    "vue": "html, css"
  },
  // Change the language of HTML expanded by Emmet
  "emmet.variables": {
    "lang": "ja"
  },
  /**
   * Prettier
   */
  "prettier.trailingComma": "es5",
  "prettier.tabWidth": 2,
  "prettier.semi": true,
  "prettier.singleQuote": true,
  "prettier.vueIndentScriptAndStyle": true,
  "prettier.printWidth": 80,
  "prettier.arrowParens": "avoid",
  "prettier.bracketSpacing": true,
  /**
   * Eslint
   */
  "eslint.format.enable": false,
  "eslint.alwaysShowStatus": true,
  "eslint.packageManager": "yarn",
  "eslint.run": "onSave",
  // Format compatible files with ESLint when saving
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
  },
  "eslint.workingDirectories": [
    {
      "mode": "auto"
    }
  ],
  /**
   * Gitmoji Commit
   */
  "gitmoji.customEmojiMap": [
    {
      "emoji": "üéâ",
      "colon": ":tada:",
      "text": "Begin a project"
    },
    {
      "emoji": "üöß",
      "colon": ":construction:",
      "text": "Work in progress"
    },
    {
      "emoji": "‚ú®",
      "colon": ":sparkles:",
      "text": "Introduce new features"
    },
    {
      "emoji": "‚ö°Ô∏è",
      "colon": ":zap:",
      "text": "Improve performance"
    },
    {
      "emoji": "üî•",
      "colon": ":fire:",
      "text": "Remove code or files"
    },
    {
      "emoji": "üêõ",
      "colon": ":bug:",
      "text": "Fix a bug"
    },
    {
      "emoji": "üöëÔ∏è",
      "colon": ":ambulance:",
      "text": "Critical hotfix"
    },
    {
      "emoji": "ü©π",
      "colon": ":adhesive_bandage:",
      "text": "Simple fix for a non-critical issue"
    },
    {
      "emoji": "üëï",
      "colon": ":shirt:",
      "text": "Fix Lint errors and correct code styles"
    },
    {
      "emoji": "üíö",
      "colon": ":green_heart:",
      "text": "Fix and improve testing and CI"
    },
    {
      "emoji": "üé®",
      "colon": ":art:",
      "text": "Improve structure / format of the code"
    },
    {
      "emoji": "‚öô",
      "colon": ":gear:",
      "text": "Change configs"
    },
    {
      "emoji": "üÜô",
      "colon": ":up:",
      "text": "Update dependent packages, etc."
    },
    {
      "emoji": "üëÆ",
      "colon": ":cop:",
      "text": "Improve on security"
    },
    {
      "emoji": "üìö",
      "colon": ":books:",
      "text": "Add documentation"
    },
    {
      "emoji": "üìù",
      "colon": ":memo:",
      "text": "Update documentation."
    },
    {
      "emoji": "‚ôªÔ∏è",
      "colon": ":recycle:",
      "text": "Refactor code"
    },
    {
      "emoji": "üí¢",
      "colon": ":anger:",
      "text": "Conflict"
    },
    {
      "emoji": "‚è™Ô∏è",
      "colon": ":rewind:",
      "text": "Revert changes"
    },
    {
      "emoji": "üîñ",
      "colon": ":bookmark:",
      "text": "Release / Version tags"
    },
    {
      "emoji": "üöÄ",
      "colon": ":rocket:",
      "text": "Deploy stuff"
    }
  ],
  "gitmoji.customEmoji": true,
  /**
   * Volar
   */
  "volar.formatting.printWidth": 80,
  /**
   * markdown formatter
   */
  "markdownFormatter.codeAreaToBlock": "",
  "markdownFormatter.fullWidthTurnHalfWidth": "auto",
  "markdownFormatter.formatOpt": {
    "indent_size": 4
  },
  /**
   * markdown lint
   */
  "markdownlint.config": {
    "MD007": false,
    "MD010": false,
    "MD041": false
  },
  /**
   * Blade formatter
   */
  "bladeFormatter.format.indentSize": 2,
  "bladeFormatter.format.sortTailwindcssClasses": true,
  /**
   * Power Mode
   */
  "powermode.enabled": true,
  "powermode.combo.location": "off",
  "powermode.combo.counterEnabled": "hide",
  "powermode.shake.enabled": false,
  "powermode.shake.intensity": 1,
  "powermode.explosions.duration": 300,
  /**
   * vscode-pets
   */
  "vscode-pets.petSize": "medium",
  "vscode-pets.position": "explorer",
  "vscode-pets.petType": "cat",
  "vscode-pets.petColor": "brown",
  "vscode-pets.theme": "forest",
  /**
   * Visual Studio IntelliCode
   *
   * AI-assisted development features for Python, TypeScript/JavaScript and Java
   */
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  /**
   * htmltagwrap
   */
  "htmltagwrap.tag": "div",
  /**
   * open-in-browser
   */
  "open-in-browser.default": "chrome",
  /**
   * intelephense
   *
   * display notice of PHP
   */
  // PHP version
  "intelephense.environment.phpVersion": "8.1.2",
  "intelephense.diagnostics.undefinedClassConstants": false,
  "intelephense.diagnostics.undefinedConstants": false,
  "intelephense.diagnostics.undefinedFunctions": false,
  "intelephense.diagnostics.undefinedMethods": false,
  "intelephense.diagnostics.undefinedTypes": false,
  "intelephense.diagnostics.undefinedProperties": false,
  /**
   * live server
   */
  "liveServer.settings.CustomBrowser": "chrome",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.port": 5500,
  /**
   * Dart Sass
   *
   * compile css file from scss files when saving
   */
  "dartsass.disableSourceMap": true,
  "dartsass.outputFormat": "cssonly",
  "dartsass.targetDirectory": "src/css",
  "dartsass.pauseInterval": 2,
  /* ---------------------------------------------------------------------------
    Settings each language
  --------------------------------------------------------------------------- */
  "[json][jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
      "document"
    ],
  },
  "[shellscript]": {
    "editor.insertSpaces": false,
    "editor.comments.insertSpace": false,
    "editor.tabSize": 4,
    "files.trimTrailingWhitespace": false
  },
  "[c]": {
    "editor.defaultFormatter": null,
    "editor.insertSpaces": false,
    "editor.comments.insertSpace": false,
    "editor.tabSize": 4,
    "editor.renderWhitespace": "boundary",
    "editor.wordBasedSuggestions": true,
    "editor.suggest.insertMode": "replace",
    "editor.semanticHighlighting.enabled": true,
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
    "files.trimTrailingWhitespace": false
  },
  "[cpp]": {
    "editor.defaultFormatter": null,
    "editor.insertSpaces": false,
    "editor.comments.insertSpace": false,
    "editor.tabSize": 4,
    "editor.renderWhitespace": "boundary",
    "editor.wordBasedSuggestions": true,
    "editor.suggest.insertMode": "replace",
    "editor.semanticHighlighting.enabled": true,
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
    "files.trimTrailingWhitespace": false
  },
  "[markdown]": {
    "editor.defaultFormatter": "mervin.markdown-formatter",
    "editor.insertSpaces": false,
    "editor.comments.insertSpace": false,
    "editor.renderWhitespace": "all",
    "editor.tabSize": 4,
    "editor.formatOnSave": false,
    "editor.formatOnPaste": false,
    "editor.formatOnType": false,
    "files.trimTrailingWhitespace": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.quickSuggestions": {
      "other": true,
      "comments": true,
      "strings": true
    }
  },
  "[html][htm]": {
    "editor.defaultFormatter": "vscode.html-language-features",
    "gitlens.codeLens.scopes": [
      "document"
    ]
  },
  "[javascript]": {
    // "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    "editor.defaultFormatter": "esbenp.prettier-vscode",
  },
  "javascript.inlayHints.parameterNames.enabled": "all",
  "[typescript]": {
    // "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    "editor.defaultFormatter": "esbenp.prettier-vscode",
  },
  "typescript.inlayHints.parameterNames.enabled": "all",
  "[vue]": {
    // "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "gitlens.codeLens.scopes": [
      "document"
    ],
    "editor.semanticHighlighting.enabled": true
  },
  "[glsl]": {
    "editor.defaultFormatter": "raczzalan.webgl-glsl-editor"
  },
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client",
    "editor.insertSpaces": false,
    "editor.tabSize": 4
  },
  "[blade]": {
    "editor.defaultFormatter": "shufo.vscode-blade-formatter",
    "editor.tabSize": 2
  },
  "[sql]": {
    "editor.defaultFormatter": "mtxr.sqltools"
  },
  "[python]": {
    "editor.defaultFormatter": null,
    "editor.formatOnSave": true
  },
  "python.formatting.provider": "black",
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": false
  },
  "dart.flutterSdkPath": "$HOME/Develope/fvm/default/bin/flutter",
  "dart.openDevTools": "flutter",
  "[csv]": {
    "editor.wordWrap": "off"
  },
  "[tsv]": {
    "editor.insertSpaces": false,
    "editor.wordWrap": "off"
  },
  "[log]": {
    "editor.wordWrap": "off"
  },
  "redhat.telemetry.enabled": false,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
}
